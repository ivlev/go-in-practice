/*
1. Возврат двух значений из функции
2. Обмен значениями переменных
3/ Использование _ как временной переменной в операциях извлечения нескольких значений
Matt Butcher, Matt Farina, "Go in Practice". Chapter 1
 */

package main

import (
	"fmt"
)

func Names() (string, string) { // простая функция,
	return "Foo", "Bar" // возвращающая два строковых значения
}

func main() {
	n1, n2 := Names() // приваивание двум переменным по порядку двух значчениий
	fmt.Println(n1, n2)
	n1, n2 = n2, n1 // Демонстрация обмена значениями переменных.
	fmt.Println(n1, n2) // Промежуточная переменная не требуется

	n3, _ := Names() // использование _ в качестве никогда не используемой переменной
	fmt.Println(n3)
	// n4  := Names() а такая запись будет ошибкой. Names возвращает два значения,
	// ни как не утискивающиеся в одну переменную
}
